export interface Authorization {
  uuid: string;
  serviceName: string;
  key: string;
  secret: string;
  created: string;
}
export interface Media {
  name: string | null;
  type: "DOCUMENT" | "IMAGE" | "VIDEO" | "AUDIO" | null;
  mimeType: string | null;
  sourceMediaUrl: string | null;
  compressedMediaUrl: string | null;
  caption: string | null;
  sourceMediaKey: string | null;
  compressedMediaKey: string | null;
  storageLocation: "S3_BUCKET" | "GCP_BUCKET" | "INTERNAL";
  originalFilename: string;
  isPublic: boolean;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface Organization {
  enum: string;
  name: string;
  parentOrganizationUuid: string | null;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface OrganizationRole {
  organizationUuid: string;
  organizationEnum: string;
  enum: string;
  name: string;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface Project {
  organizationUuid: string;
  enum: string;
  name: string;
  startDate: number;
  targetEndDate: number | null;
  targetReleaseDate: number | null;
  requirementsUrl: string | null;
  standardsUrl: string | null;
  projectManagementUrl: string | null;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface ProjectAttribute {
  projectUuid: string;
  projectAttributeTypeUuid: string;
  projectAttributeTypeValueUuid: string | null;
  projectAttributeTypeEnum: string;
  projectAttributeTypeValueEnum: string | null;
  name: string | null;
  value: string | null;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface ProjectAttributeType {
  projectUuid: string;
  parentUuid: string | null;
  enum: string;
  name: string;
  labelNumber: string | null;
  defaultValue: string;
  isRequired: boolean;
  jsonSchema: string;
  label: string | null;
  placeholderText: string | null;
  helpMarkdownText: string | null;
  isMedia: boolean | null;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface ProjectAttributeTypeValue {
  projectUuid: string;
  projectAttributeTypeUuid: string;
  enum: string;
  name: string;
  value: string | null;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface Risk {
  projectUuid: string;
  riskTypeUuid: string | null;
  riskTypeEnum: string;
  riskCategoryUuid: string;
  riskCategoryEnum: string;
  name: string;
  sectionNumber: string | null;
  referenceUrl: string | null;
  location: string | null;
  persons: string | null;
  activity: string | null;
  photoUrl: string | null;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface RiskAttribute {
  riskUuid: string;
  riskAttributeTypeUuid: string;
  name: string | null;
  value: string | null;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface RiskAttributeType {
  riskUuid: string | null;
  parentUuid: string | null;
  enum: string;
  name: string;
  labelNumber: string | null;
  defaultValue: string;
  isRequired: boolean;
  jsonSchema: string;
  label: string | null;
  placeholderText: string | null;
  helpMarkdownText: string | null;
  isMedia: boolean | null;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface RiskCategory {
  sectionNumber: string | null;
  enum: string;
  name: string;
  referenceUrl: string | null;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface RiskCategoryAttribute {
  riskCategoryUuid: string;
  riskCategoryAttributeTypeUuid: string;
  name: string | null;
  value: string | null;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface RiskCategoryAttributeType {
  riskCategoryUuid: string | null;
  parentUuid: string | null;
  enum: string;
  name: string;
  labelNumber: string | null;
  defaultValue: string;
  isRequired: boolean;
  jsonSchema: string;
  label: string | null;
  placeholderText: string | null;
  helpMarkdownText: string | null;
  isMedia: boolean | null;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface RiskCategoryProject {
  riskCategoryUuid: string | null;
  projectUuid: string | null;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface RiskDiscussion {
  type: string;
  riskUuid: string;
  locked: boolean;
  closed: boolean;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface RiskDiscussionMessage {
  authorUserUuid: string;
  parentUuid: string | null;
  mediaUuid: string | null;
  message: string;
  timestamp: number;
  hasParentMessage: boolean;
  isEdited: boolean;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface RiskEvaluation {
  type: string;
  riskUuid: string;
  stage: "INITIAL" | "RESIDUAL";
  compositeSeverityOfInjury: number | null;
  compositeFrequencyOfEvent: number | null;
  compositePossibilityOfInjury: number | null;
  severityOfInjuryMin: number;
  severityOfInjuryMax: number;
  severityOfInjuryVoteAllowed: boolean | null;
  frequencyOfEventMin: number;
  frequencyOfEventMax: number;
  frequencyOfEventVoteAllowed: boolean | null;
  possibilityOfInjuryMin: number;
  possibilityOfInjuryMax: number;
  possibilityOfInjuryVoteAllowed: boolean | null;
  compositeRiskScore: number | null;
  riskReductionMeasureComment: string | null;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface RiskEvaluationEntry {
  userUuid: string;
  riskUuid: string;
  severityOfInjury: number | null;
  frequencyOfEvent: number | null;
  possibilityOfInjury: number | null;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface RiskMedia {
  riskUuid: string;
  mediaUuid: string;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface RiskType {
  enum: string;
  name: string;
  parentUuid: string | null;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface Role {
  enum: string;
  name: string;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface Tag {
  name: string;
  rgbColor: string | null;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface TagOrganization {
  tagUuid: string;
  organizationUuid: string;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface TagProject {
  tagUuid: string;
  projectUuid: string;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface User {
  primaryRoleUuid: string;
  primaryRoleEnum: string;
  firstName: string;
  lastName: string;
  username: string;
  email: string;
  password: string | null;
  accountType: "USER" | "SERVICE_ACCOUNT";
  clientId: string | null;
  clientSecret: string | null;
  externalIdProvider: "AMZ" | "GOOGLE" | null;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface UserOrganization {
  userUuid: string;
  organizationUuid: string;
  isSelected: boolean;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface UserOrganizationRole {
  userUuid: string;
  organizationRoleUuid: string;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface UserProject {
  userUuid: string | null;
  projectUuid: string;
  organizationRoleUuid: string | null;
  projectRole: "OWNER" | "MEMBER" | "GUEST" | null;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface UserRole {
  userUuid: string;
  roleUuid: string;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface AttributeBase {
  name: string | null;
  value: string | null;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface AttributeTypeBase {
  enum: string;
  name: string;
  labelNumber: string | null;
  defaultValue: string;
  isRequired: boolean;
  jsonSchema: string;
  label: string | null;
  placeholderText: string | null;
  helpMarkdownText: string | null;
  isMedia: boolean | null;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface AttributeTypeValueBase {
  enum: string;
  name: string;
  value: string | null;
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
export interface Base {
  uuid: string;
  shortDescription: string | null;
  longDescription: string | null;
  created: string;
  creator: string;
  metadata: string | null;
  updated: string | null;
  updaterIdentityUuid: string | null;
  valid: boolean;
  archived: boolean;
  cacheKey: string | null;
  integrityKey: string | null;
  deidentified: boolean;
  deidentifiedTimestamp: number | null;
  markedForExpungepment: boolean;
  expungementTimestamp: number | null;
  containsSensitiveData: boolean;
  sensitivityClassificationTypeEnum: string;
  version: string;
  correlationUuid: string | null;
  externalId: string | null;
  comment: string | null;
  recordType: string | null;
}
