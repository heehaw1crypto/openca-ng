import type { FieldsOrganization } from "./FieldsOrganization";
import type { FieldsUserOrganizationRole } from "./FieldsUserOrganizationRole";
import type { FieldsUserProject } from "./FieldsUserProject";
import type { FieldsUser } from "./FieldsUser";
import type { WhereOrganization } from "./WhereOrganization";
import type { WhereUserOrganizationRole } from "./WhereUserOrganizationRole";
import type { WhereUserProject } from "./WhereUserProject";
import type { WhereUser } from "./WhereUser";
import type { OrderByUserOrganizationRole } from "./OrderByUserOrganizationRole";
import type { OrderByUserProject } from "./OrderByUserProject";
import type { OrderByUser } from "./OrderByUser";
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export declare type FieldsOrganizationRole = (("id" | "organizationId" | "organizationEnum" | "enum" | "name" | "uuid" | "shortDescription" | "longDescription" | "created" | "creator" | "metadata" | "updated" | "updaterIdentityUuid" | "valid" | "archived" | "cacheKey" | "integrityKey" | "deidentified" | "deidentifiedTimestamp" | "markedForExpungepment" | "expungementTimestamp" | "containsSensitiveData" | "sensitivityClassificationTypeEnum" | "version" | "correlationUuid" | "externalId" | "comment" | "recordType" | "organizationUuid") | {
    name: "organization";
    as?: string;
    fields: FieldsOrganization;
    args?: {
        $where?: WhereOrganization;
    };
} | {
    name: "userOrganizationRoleList";
    as?: string;
    fields: FieldsUserOrganizationRole;
    args?: {
        $where?: WhereUserOrganizationRole;
        $orderBy?: OrderByUserOrganizationRole;
    };
} | {
    name: "userProjectList";
    as?: string;
    fields: FieldsUserProject;
    args?: {
        $where?: WhereUserProject;
        $orderBy?: OrderByUserProject;
    };
} | {
    name: "userList";
    as?: string;
    fields: FieldsUser;
    args?: {
        $where?: WhereUser | [WhereUser, WhereUserOrganizationRole];
        $orderBy?: OrderByUser;
    };
})[];
