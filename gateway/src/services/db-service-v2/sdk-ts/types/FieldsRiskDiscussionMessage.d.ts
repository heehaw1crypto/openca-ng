import type { FieldsUser } from "./FieldsUser";
import type { FieldsMedia } from "./FieldsMedia";
import type { WhereUser } from "./WhereUser";
import type { WhereMedia } from "./WhereMedia";
import type { WhereRiskDiscussionMessage } from "./WhereRiskDiscussionMessage";
import type { OrderByRiskDiscussionMessage } from "./OrderByRiskDiscussionMessage";
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export declare type FieldsRiskDiscussionMessage = (("id" | "authorUserId" | "parentId" | "mediaId" | "message" | "timestamp" | "hasParentMessage" | "isEdited" | "uuid" | "shortDescription" | "longDescription" | "created" | "creator" | "metadata" | "updated" | "updaterIdentityUuid" | "valid" | "archived" | "cacheKey" | "integrityKey" | "deidentified" | "deidentifiedTimestamp" | "markedForExpungepment" | "expungementTimestamp" | "containsSensitiveData" | "sensitivityClassificationTypeEnum" | "version" | "correlationUuid" | "externalId" | "comment" | "recordType" | "authorUserUuid" | "mediaUuid" | "parentUuid") | {
    name: "user";
    as?: string;
    fields: FieldsUser;
    args?: {
        $where?: WhereUser;
    };
} | {
    name: "media";
    as?: string;
    fields: FieldsMedia;
    args?: {
        $where?: WhereMedia;
    };
} | {
    name: "riskDiscussionMessage";
    as?: string;
    fields: FieldsRiskDiscussionMessage;
    args?: {
        $where?: WhereRiskDiscussionMessage;
    };
} | {
    name: "riskDiscussionMessageList";
    as?: string;
    fields: FieldsRiskDiscussionMessage;
    args?: {
        $where?: WhereRiskDiscussionMessage;
        $orderBy?: OrderByRiskDiscussionMessage;
    };
})[];
