import type { ReturnBaseAsil } from "./ReturnBaseAsil";
import type { ReturnBaseGuideword } from "./ReturnBaseGuideword";
import type { ReturnBaseHazardType } from "./ReturnBaseHazardType";
import type { ReturnBasePl } from "./ReturnBasePl";
import type { ReturnBaseRiskAvoidability } from "./ReturnBaseRiskAvoidability";
import type { ReturnBaseRiskClass } from "./ReturnBaseRiskClass";
import type { ReturnBaseRiskExposure } from "./ReturnBaseRiskExposure";
import type { ReturnBaseRiskSeverity } from "./ReturnBaseRiskSeverity";
import type { ReturnBaseSil } from "./ReturnBaseSil";
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export interface ReturnBaseStandard {
    id?: number;
    hrId?: string;
    standard?: string;
    title?: string | null;
    strict?: boolean | null;
    url?: string | null;
    uuid?: string;
    shortDescription?: string | null;
    longDescription?: string | null;
    created?: string;
    creator?: string;
    metadata?: string | null;
    updated?: string | null;
    updaterIdentityUuid?: string | null;
    valid?: boolean;
    archived?: boolean;
    cacheKey?: string | null;
    integrityKey?: string | null;
    deidentified?: boolean;
    deidentifiedTimestamp?: number | null;
    markedForExpungepment?: boolean;
    expungementTimestamp?: number | null;
    containsSensitiveData?: boolean;
    sensitivityClassificationTypeEnum?: string;
    version?: string;
    correlationUuid?: string | null;
    externalId?: string | null;
    comment?: string | null;
    recordType?: string | null;
    asilList?: ReturnBaseAsil[];
    guidewordList?: ReturnBaseGuideword[];
    hazardTypeList?: ReturnBaseHazardType[];
    plList?: ReturnBasePl[];
    riskAvoidabilityList?: ReturnBaseRiskAvoidability[];
    riskClassList?: ReturnBaseRiskClass[];
    riskExposureList?: ReturnBaseRiskExposure[];
    riskSeverityList?: ReturnBaseRiskSeverity[];
    silList?: ReturnBaseSil[];
    [k: string]: unknown;
}
