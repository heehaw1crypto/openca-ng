import type { FieldsProject } from "./FieldsProject";
import type { FieldsProjectAttribute } from "./FieldsProjectAttribute";
import type { FieldsProjectAttributeTypeValue } from "./FieldsProjectAttributeTypeValue";
import type { WhereProjectAttributeType } from "./WhereProjectAttributeType";
import type { WhereProject } from "./WhereProject";
import type { WhereProjectAttribute } from "./WhereProjectAttribute";
import type { WhereProjectAttributeTypeValue } from "./WhereProjectAttributeTypeValue";
import type { OrderByProjectAttribute } from "./OrderByProjectAttribute";
import type { OrderByProjectAttributeType } from "./OrderByProjectAttributeType";
import type { OrderByProjectAttributeTypeValue } from "./OrderByProjectAttributeTypeValue";
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export declare type FieldsProjectAttributeType = (("id" | "projectId" | "parentId" | "enum" | "name" | "labelNumber" | "defaultValue" | "isRequired" | "jsonSchema" | "label" | "placeholderText" | "helpMarkdownText" | "isMedia" | "uuid" | "shortDescription" | "longDescription" | "created" | "creator" | "metadata" | "updated" | "updaterIdentityUuid" | "valid" | "archived" | "cacheKey" | "integrityKey" | "deidentified" | "deidentifiedTimestamp" | "markedForExpungepment" | "expungementTimestamp" | "containsSensitiveData" | "sensitivityClassificationTypeEnum" | "version" | "correlationUuid" | "externalId" | "comment" | "recordType" | "parentUuid" | "projectUuid") | {
    name: "projectAttributeType";
    as?: string;
    fields: FieldsProjectAttributeType;
    args?: {
        $where?: WhereProjectAttributeType;
    };
} | {
    name: "project";
    as?: string;
    fields: FieldsProject;
    args?: {
        $where?: WhereProject;
    };
} | {
    name: "projectAttributeList";
    as?: string;
    fields: FieldsProjectAttribute;
    args?: {
        $where?: WhereProjectAttribute;
        $orderBy?: OrderByProjectAttribute;
    };
} | {
    name: "projectAttributeTypeList";
    as?: string;
    fields: FieldsProjectAttributeType;
    args?: {
        $where?: WhereProjectAttributeType;
        $orderBy?: OrderByProjectAttributeType;
    };
} | {
    name: "projectAttributeTypeValueList";
    as?: string;
    fields: FieldsProjectAttributeTypeValue;
    args?: {
        $where?: WhereProjectAttributeTypeValue;
        $orderBy?: OrderByProjectAttributeTypeValue;
    };
})[];
