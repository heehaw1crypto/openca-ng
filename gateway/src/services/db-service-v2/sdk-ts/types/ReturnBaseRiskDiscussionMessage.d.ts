import type { ReturnBaseUser } from "./ReturnBaseUser";
import type { ReturnBaseMedia } from "./ReturnBaseMedia";
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export interface ReturnBaseRiskDiscussionMessage {
    id?: number;
    authorUserId?: number;
    parentId?: number | null;
    mediaId?: number | null;
    message?: string;
    timestamp?: number;
    hasParentMessage?: boolean;
    isEdited?: boolean;
    uuid?: string;
    shortDescription?: string | null;
    longDescription?: string | null;
    created?: string;
    creator?: string;
    metadata?: string | null;
    updated?: string | null;
    updaterIdentityUuid?: string | null;
    valid?: boolean;
    archived?: boolean;
    cacheKey?: string | null;
    integrityKey?: string | null;
    deidentified?: boolean;
    deidentifiedTimestamp?: number | null;
    markedForExpungepment?: boolean;
    expungementTimestamp?: number | null;
    containsSensitiveData?: boolean;
    sensitivityClassificationTypeEnum?: string;
    version?: string;
    correlationUuid?: string | null;
    externalId?: string | null;
    comment?: string | null;
    recordType?: string | null;
    authorUserUuid?: string;
    mediaUuid?: string | null;
    parentUuid?: string | null;
    user?: ReturnBaseUser;
    media?: ReturnBaseMedia;
    riskDiscussionMessage?: ReturnBaseRiskDiscussionMessage;
    riskDiscussionMessageList?: ReturnBaseRiskDiscussionMessage[];
    [k: string]: unknown;
}
