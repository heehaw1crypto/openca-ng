import type { FieldsRisk } from "./FieldsRisk";
import type { FieldsUser } from "./FieldsUser";
import type { WhereRisk } from "./WhereRisk";
import type { WhereUser } from "./WhereUser";
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export declare type FieldsRiskEvaluationEntry = (("id" | "userId" | "riskId" | "severityOfInjury" | "frequencyOfEvent" | "possibilityOfInjury" | "uuid" | "shortDescription" | "longDescription" | "created" | "creator" | "metadata" | "updated" | "updaterIdentityUuid" | "valid" | "archived" | "cacheKey" | "integrityKey" | "deidentified" | "deidentifiedTimestamp" | "markedForExpungepment" | "expungementTimestamp" | "containsSensitiveData" | "sensitivityClassificationTypeEnum" | "version" | "correlationUuid" | "externalId" | "comment" | "recordType" | "riskUuid" | "userUuid") | {
    name: "risk";
    as?: string;
    fields: FieldsRisk;
    args?: {
        $where?: WhereRisk;
    };
} | {
    name: "user";
    as?: string;
    fields: FieldsUser;
    args?: {
        $where?: WhereUser;
    };
})[];
