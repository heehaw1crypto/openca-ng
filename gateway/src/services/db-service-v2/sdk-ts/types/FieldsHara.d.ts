import type { FieldsSil } from "./FieldsSil";
import type { FieldsExistingExternalMeasure } from "./FieldsExistingExternalMeasure";
import type { FieldsRiskAvoidability } from "./FieldsRiskAvoidability";
import type { FieldsRiskExposure } from "./FieldsRiskExposure";
import type { FieldsRiskClass } from "./FieldsRiskClass";
import type { FieldsRiskSeverity } from "./FieldsRiskSeverity";
import type { FieldsHazard } from "./FieldsHazard";
import type { FieldsHazardousEvent } from "./FieldsHazardousEvent";
import type { FieldsProject } from "./FieldsProject";
import type { FieldsRiskReductionMeasure } from "./FieldsRiskReductionMeasure";
import type { FieldsRiskReductionMeasureType } from "./FieldsRiskReductionMeasureType";
import type { FieldsUser } from "./FieldsUser";
import type { WhereSil } from "./WhereSil";
import type { WhereExistingExternalMeasure } from "./WhereExistingExternalMeasure";
import type { WhereRiskAvoidability } from "./WhereRiskAvoidability";
import type { WhereRiskExposure } from "./WhereRiskExposure";
import type { WhereRiskClass } from "./WhereRiskClass";
import type { WhereRiskSeverity } from "./WhereRiskSeverity";
import type { WhereHazard } from "./WhereHazard";
import type { WhereHazardousEvent } from "./WhereHazardousEvent";
import type { WhereProject } from "./WhereProject";
import type { WhereRiskReductionMeasure } from "./WhereRiskReductionMeasure";
import type { WhereRiskReductionMeasureType } from "./WhereRiskReductionMeasureType";
import type { WhereUser } from "./WhereUser";
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export declare type FieldsHara = (("id" | "hrId" | "userId" | "projectId" | "hazardousEventId" | "hazardId" | "existingExternalMeasureId" | "initialSeverityId" | "initialSeverityJustification" | "initialExposureId" | "initialExposureJustification" | "initialAvoidabilityId" | "initialAvoidabilityJustification" | "initialRiskClassId" | "targetRiskReductionMeasureTypeId" | "safetyTargetType" | "allocatedSILId" | "riskReductionMeasureId" | "finalSeverityId" | "finalSeverityJustification" | "finalExposureId" | "finalExposureJustification" | "finalAvoidabilityId" | "finalAvoidabilityJustification" | "finalRiskClassId" | "remarks" | "uuid" | "shortDescription" | "longDescription" | "created" | "creator" | "metadata" | "updated" | "updaterIdentityUuid" | "valid" | "archived" | "cacheKey" | "integrityKey" | "deidentified" | "deidentifiedTimestamp" | "markedForExpungepment" | "expungementTimestamp" | "containsSensitiveData" | "sensitivityClassificationTypeEnum" | "version" | "correlationUuid" | "externalId" | "comment" | "recordType" | "allocatedSILUuid" | "existingExternalMeasureUuid" | "finalAvoidabilityUuid" | "finalExposureUuid" | "finalRiskClassUuid" | "finalSeverityUuid" | "hazardUuid" | "hazardousEventUuid" | "initialAvoidabilityUuid" | "initialExposureUuid" | "initialRiskClassUuid" | "initialSeverityUuid" | "projectUuid" | "riskReductionMeasureUuid" | "targetRiskReductionMeasureTypeUuid" | "userUuid") | {
    name: "sil";
    as?: string;
    fields: FieldsSil;
    args?: {
        $where?: WhereSil;
    };
} | {
    name: "existingExternalMeasure";
    as?: string;
    fields: FieldsExistingExternalMeasure;
    args?: {
        $where?: WhereExistingExternalMeasure;
    };
} | {
    name: "riskAvoidability1";
    as?: string;
    fields: FieldsRiskAvoidability;
    args?: {
        $where?: WhereRiskAvoidability;
    };
} | {
    name: "riskExposure1";
    as?: string;
    fields: FieldsRiskExposure;
    args?: {
        $where?: WhereRiskExposure;
    };
} | {
    name: "riskClass1";
    as?: string;
    fields: FieldsRiskClass;
    args?: {
        $where?: WhereRiskClass;
    };
} | {
    name: "riskSeverity1";
    as?: string;
    fields: FieldsRiskSeverity;
    args?: {
        $where?: WhereRiskSeverity;
    };
} | {
    name: "hazard";
    as?: string;
    fields: FieldsHazard;
    args?: {
        $where?: WhereHazard;
    };
} | {
    name: "hazardousEvent";
    as?: string;
    fields: FieldsHazardousEvent;
    args?: {
        $where?: WhereHazardousEvent;
    };
} | {
    name: "riskAvoidability2";
    as?: string;
    fields: FieldsRiskAvoidability;
    args?: {
        $where?: WhereRiskAvoidability;
    };
} | {
    name: "riskExposure2";
    as?: string;
    fields: FieldsRiskExposure;
    args?: {
        $where?: WhereRiskExposure;
    };
} | {
    name: "riskClass2";
    as?: string;
    fields: FieldsRiskClass;
    args?: {
        $where?: WhereRiskClass;
    };
} | {
    name: "riskSeverity2";
    as?: string;
    fields: FieldsRiskSeverity;
    args?: {
        $where?: WhereRiskSeverity;
    };
} | {
    name: "project";
    as?: string;
    fields: FieldsProject;
    args?: {
        $where?: WhereProject;
    };
} | {
    name: "riskReductionMeasure";
    as?: string;
    fields: FieldsRiskReductionMeasure;
    args?: {
        $where?: WhereRiskReductionMeasure;
    };
} | {
    name: "riskReductionMeasureType";
    as?: string;
    fields: FieldsRiskReductionMeasureType;
    args?: {
        $where?: WhereRiskReductionMeasureType;
    };
} | {
    name: "user";
    as?: string;
    fields: FieldsUser;
    args?: {
        $where?: WhereUser;
    };
})[];
