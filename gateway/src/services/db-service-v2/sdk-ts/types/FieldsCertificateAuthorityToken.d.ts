import type { FieldsCertificateAuthority } from "./FieldsCertificateAuthority";
import type { FieldsCertificateToken } from "./FieldsCertificateToken";
import type { WhereCertificateAuthority } from "./WhereCertificateAuthority";
import type { WhereCertificateToken } from "./WhereCertificateToken";
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export declare type FieldsCertificateAuthorityToken = (("id" | "certificateAuthorityId" | "certificateTokenId" | "isSelected" | "uuid" | "shortDescription" | "longDescription" | "created" | "creator" | "metadata" | "updated" | "updaterIdentityUuid" | "valid" | "archived" | "cacheKey" | "integrityKey" | "deidentified" | "deidentifiedTimestamp" | "markedForExpungepment" | "expungementTimestamp" | "containsSensitiveData" | "sensitivityClassificationTypeEnum" | "version" | "correlationUuid" | "externalId" | "comment" | "recordType" | "certificateAuthorityUuid" | "certificateTokenUuid") | {
    name: "certificateAuthority";
    as?: string;
    fields: FieldsCertificateAuthority;
    args?: {
        $where?: WhereCertificateAuthority;
    };
} | {
    name: "certificateToken";
    as?: string;
    fields: FieldsCertificateToken;
    args?: {
        $where?: WhereCertificateToken;
    };
})[];
