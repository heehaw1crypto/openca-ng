import type { FieldsProject } from "./FieldsProject";
import type { FieldsSil } from "./FieldsSil";
import type { FieldsRiskReductionMeasureType } from "./FieldsRiskReductionMeasureType";
import type { FieldsHara } from "./FieldsHara";
import type { WhereProject } from "./WhereProject";
import type { WhereSil } from "./WhereSil";
import type { WhereRiskReductionMeasureType } from "./WhereRiskReductionMeasureType";
import type { WhereHara } from "./WhereHara";
import type { OrderByHara } from "./OrderByHara";
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export declare type FieldsRiskReductionMeasure = (("id" | "hrId" | "projectId" | "typeId" | "targetSILId" | "description" | "remarks" | "uuid" | "shortDescription" | "longDescription" | "created" | "creator" | "metadata" | "updated" | "updaterIdentityUuid" | "valid" | "archived" | "cacheKey" | "integrityKey" | "deidentified" | "deidentifiedTimestamp" | "markedForExpungepment" | "expungementTimestamp" | "containsSensitiveData" | "sensitivityClassificationTypeEnum" | "version" | "correlationUuid" | "externalId" | "comment" | "recordType" | "projectUuid" | "targetSILUuid" | "typeUuid") | {
    name: "project";
    as?: string;
    fields: FieldsProject;
    args?: {
        $where?: WhereProject;
    };
} | {
    name: "sil";
    as?: string;
    fields: FieldsSil;
    args?: {
        $where?: WhereSil;
    };
} | {
    name: "riskReductionMeasureType";
    as?: string;
    fields: FieldsRiskReductionMeasureType;
    args?: {
        $where?: WhereRiskReductionMeasureType;
    };
} | {
    name: "haraList";
    as?: string;
    fields: FieldsHara;
    args?: {
        $where?: WhereHara;
        $orderBy?: OrderByHara;
    };
})[];
