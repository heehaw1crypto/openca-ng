import type { FieldsRisk } from "./FieldsRisk";
import type { FieldsRiskAttribute } from "./FieldsRiskAttribute";
import type { WhereRiskAttributeType } from "./WhereRiskAttributeType";
import type { WhereRisk } from "./WhereRisk";
import type { WhereRiskAttribute } from "./WhereRiskAttribute";
import type { OrderByRiskAttribute } from "./OrderByRiskAttribute";
import type { OrderByRiskAttributeType } from "./OrderByRiskAttributeType";
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export declare type FieldsRiskAttributeType = (("id" | "riskId" | "parentId" | "enum" | "name" | "labelNumber" | "defaultValue" | "isRequired" | "jsonSchema" | "label" | "placeholderText" | "helpMarkdownText" | "isMedia" | "uuid" | "shortDescription" | "longDescription" | "created" | "creator" | "metadata" | "updated" | "updaterIdentityUuid" | "valid" | "archived" | "cacheKey" | "integrityKey" | "deidentified" | "deidentifiedTimestamp" | "markedForExpungepment" | "expungementTimestamp" | "containsSensitiveData" | "sensitivityClassificationTypeEnum" | "version" | "correlationUuid" | "externalId" | "comment" | "recordType" | "parentUuid" | "riskUuid") | {
    name: "riskAttributeType";
    as?: string;
    fields: FieldsRiskAttributeType;
    args?: {
        $where?: WhereRiskAttributeType;
    };
} | {
    name: "risk";
    as?: string;
    fields: FieldsRisk;
    args?: {
        $where?: WhereRisk;
    };
} | {
    name: "riskAttributeList";
    as?: string;
    fields: FieldsRiskAttribute;
    args?: {
        $where?: WhereRiskAttribute;
        $orderBy?: OrderByRiskAttribute;
    };
} | {
    name: "riskAttributeTypeList";
    as?: string;
    fields: FieldsRiskAttributeType;
    args?: {
        $where?: WhereRiskAttributeType;
        $orderBy?: OrderByRiskAttributeType;
    };
})[];
